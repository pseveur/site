{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue \u00e0 Formation Git Introduction Ce document a pour but de pr\u00e9senter les exercices r\u00e9alis\u00e9s lors de la formation Git pour d\u00e9veloppeur. Dans ce document, Git est toujours utilis\u00e9 depuis Eclipse. Il ne s\u2019agit donc pas ici d\u2019utiliser Git en lignes de commande ou avec d\u2019autres clients. Il est donc indispensable que l\u2019utilisateur de ce guide connaisse Eclipse et sache un minimum d\u00e9velopper avec cet outil. Ce document peut \u00eatre utilis\u00e9 lors de la formation mais \u00e9galement de fa\u00e7on individuelle par toute personne souhaitant avoir une premi\u00e8re approche Git. Il est suffisamment illustr\u00e9 pour pouvoir appr\u00e9hender seul les principaux concepts et surtout pratiquer. Pour la formation, se connecter sur le poste avec son propre matricule (a ou x) et non celui de la salle de formation. 1 - Exercice 1 \u2013 Configurer Git sous Eclipse But de l\u2019exercice : Configurer Git sous Eclipse D\u00e9marrer Eclipse Kepler JEE 4.3.2, Se positionner dans le workspace D:\\FormationGit qui a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9 sur les postes de formation. identification division. move a to b move 'ABCD' to zone. require 'redcarpet' markdown = Redcarpet.new(\"Hello World!\") puts markdown.to_html Figure 1- Choix du workspace @startuml [*] --> State1 State1 --> [*] State1 : this is a string State1 : this is another string State1 -> State2 State2 --> [*] @enduml @startuml scale 350 width [*] --> NotShooting state NotShooting { [*] --> Idle Idle --> Configuring : EvConfig Configuring --> Idle : EvConfig } state Configuring { [*] --> NewValueSelection NewValueSelection --> NewValuePreview : EvNewValue NewValuePreview --> NewValueSelection : EvNewValueRejected NewValuePreview --> NewValueSelection : EvNewValueSaved state NewValuePreview { State1 -> State2 } } @enduml @startuml skinparam ParticipantPadding 20 skinparam BoxPadding 10 box \"GitHub repo\" #LightCyan participant \"origin/master\" participant \"origin/develop\" end box box \"Dev1 repo\" #White participant develop participant \"feature/A\" participant \"feature/B\" end box activate \"origin/master\" \"origin/master\" -> \"origin/master\" : initial\\ncommit \"origin/master\" -> \"origin/develop\" : branch from\\norigin/master activate \"origin/develop\" \"develop\" <- \"origin/develop\" : pull from\\norigin/develop activate develop \"develop\" -> \"feature/A\" : branch from develop activate \"feature/A\" \"feature/A\" -> \"feature/A\" : commit 1 \"feature/A\" -> \"feature/A\" : commit 2 develop <- \"feature/A\" : merge feature/A\\ninto develop develop -> develop : merge commit destroy \"feature/A\" note over \"feature/A\": Feature branches are\\ndeleted when merged \"origin/develop\" <- \"develop\" : push to\\norigin/develop @enduml gitflow-hotfix.puml @startuml participant develop participant master master -> master: tag 1.2.0 create participant \"hotfix/1.2.1\" as hotfix master -> hotfix: branch from master activate hotfix hotfix -> hotfix: commit hotfix -> hotfix: commit note over hotfix #D3D3D3: 1.2.1-beta.1+2 hotfix -> hotfix: tag 1.2.1-beta.1 note over hotfix #D3D3D3: 1.2.1-beta.1 hotfix -> master: merge destroy hotfix note over hotfix Hotfix branches are deleted once merged end note master -> master: tag 1.2.1 @enduml gitflow-support-hotfix.puml @startuml == gitflow hotfix support == participant develop participant master master -> master: tag 1.3.0 master -> develop: branch from master note over develop, master Create 2.0.0 release and complete end note master -> master: tag 2.0.0 create participant \"support/1.x\" as support master -> support: branch from tag (1.3.0) support -> support: commit note over support #D3D3D3: 1.3.1+1 create participant \"hotfix/1.3.1\" as hotfix2 support -> hotfix2: branch from support/1.x activate hotfix2 hotfix2 -> hotfix2: commit hotfix2 -> hotfix2: commit note over hotfix2 #D3D3D3: 1.3.1-beta.1+3 hotfix2 -> hotfix2: tag 1.3.1-beta.1 note over hotfix2 #D3D3D3: 1.3.1-beta.1 hotfix2 -> support: merge destroy hotfix2 note over hotfix2 Hotfix branches are deleted once merged end note note over support #D3D3D3: 1.3.1+4 support -> support: tag 1.3.1 note over support #D3D3D3: 1.3.1 @enduml gitflow-major.puml @startuml == gitflow major == participant master participant develop master -> master: tag 1.3.0 master -> develop: branch from master develop -> develop: commit create participant \"release/2.0.0\" as release develop -> release: branch from develop activate release note over release #D3D3D3: 2.0.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.4.0-unstable.2 release -> release: commit note over release #D3D3D3: 2.0.0-beta.1+1 release -> release: tag 2.0.0-beta.1 note over release #D3D3D3: 2.0.0-beta.1 release -> release: commit note over release #D3D3D3: 2.0.0-beta.2+2 release -> master: merge release -> develop: merge destroy release note over release Release branches are deleted once merged end note note over master #D3D3D3: 2.0.0+0 master -> master: tag 2.0.0 note over master #D3D3D3: 2.0.0 note over develop #D3D3D3: 2.1.0-unstable.2 @enduml gitflow-minor.puml @startuml == gitflow minor == participant master participant develop master -> master: tag 1.2.1 master -> develop: branch from master develop -> develop: commit create participant \"release/1.3.0\" as release develop -> release: branch from develop activate release note over release #D3D3D3: 1.3.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.2 release -> release: commit note over release #D3D3D3: 1.3.0-beta.1+1 release -> release: tag 1.3.0-beta.1 note over release #D3D3D3: 1.3.0-beta.1 release -> release: commit note over release #D3D3D3: 1.3.0-beta.2+2 release -> master: merge release -> develop: merge destroy release note over release Release branches are deleted once merged end note master -> master: tag 1.3.0 note over master #D3D3D3: 1.3.0 note over develop #D3D3D3: 1.4.0-unstable.2 @enduml gitflow-featurebranch.puml @startuml == gitflow feature branch == participant master participant develop master -> master: tag 1.2.0 master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 create participant \"feature/myfeature\" as feature develop -> feature: branch from develop activate feature note over feature #D3D3D3: 1.3.0-myfeature.1+1 feature -> feature: commit note over feature #D3D3D3: 1.3.0-myfeature.1+2 feature -> develop: merge destroy feature note over feature Feature branches should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 @enduml gitflow-support-minor.puml @startuml == gitflow support minor == participant develop participant master master -> master: tag 1.3.0 master -> develop: branch from master note over develop, master Create 2.0.0 release and complete end note master -> master: tag 2.0.0 create participant \"support/1.x\" as support master -> support: branch from tag (1.3.0) note over master, support Create 1.3.1 release and complete end note support -> support: tag 1.3.1 create participant \"release/1.4.0\" as supportRelease support -> supportRelease: branch from support/1.x activate supportRelease supportRelease -> supportRelease: commit supportRelease -> supportRelease: commit note over supportRelease #D3D3D3: 1.4.0-beta.1+2 supportRelease -> supportRelease: tag 1.4.0-beta.1 note over supportRelease #D3D3D3: 1.4.0-beta.1 supportRelease -> support: merge destroy supportRelease note over supportRelease Release branches are deleted once merged end note note over support #D3D3D3: 1.4.0+0 support -> support: tag 1.4.0 note over support #D3D3D3: 1.4.0 @enduml gitflow-pullrequest.puml @startuml participant master participant develop master -> master: tag 1.2.0 master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 create participant \"pull/2/merge\" as pr develop -> pr: branch from develop activate pr note over pr #D3D3D3: 1.3.0-PullRequest.2+1 pr -> pr: commit note over pr #D3D3D3: 1.3.0-PullRequest.2+2 pr -> develop: merge destroy pr note over pr Feature branches/pr's should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 @enduml gitflow-overview.puml @startuml == gitflow overwiew == participant \"pull/2/merge\" as feature participant develop participant \"release/2.0.0\" as majorRelease participant \"release/1.3.0\" as minorRelease participant master activate develop activate master master -> master: commit master -> master: tag 1.2.0 == Feature branch == note over feature, master Feature branches are likely pushed to a fork, then submit a PR.pull/2/merge is what your build server sees when you submit a PR with #2 end note hnote over develop develop end note master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 hnote over feature pull/2/merge end note develop -> feature: branch from develop activate feature note over feature #D3D3D3: 1.3.0-PullRequest.2+1 feature -> feature: commit note over feature #D3D3D3: 1.3.0-PullRequest.2+2 feature -> develop: merge destroy feature note over feature Feature branches/pr's should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 == Hotfix release == note over feature, master Hotfix branches are short lived branches which allow you to do SemVer patch releases end note create participant \"hotfix/1.2.1\" as hotfix master -> hotfix: branch from master activate hotfix hotfix -> hotfix: commit hotfix -> hotfix: commit note over hotfix #D3D3D3: 1.2.1-beta.1+2 hotfix -> hotfix: tag 1.2.1-beta.1 note over hotfix #D3D3D3: 1.2.1-beta.1 hotfix -> master: merge destroy hotfix note over hotfix Hotfix branches are deleted once merged end note master -> master: tag 1.2.1 == Minor Release == note over feature, master In GitFlow the release branch is taken from develop end note hnote over minorRelease release/1.3.0 end note develop -> minorRelease: branch from develop activate minorRelease note over minorRelease #D3D3D3: 1.3.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.4 minorRelease -> minorRelease: commit note over minorRelease #D3D3D3: 1.3.0-beta.1+1 minorRelease -> minorRelease: tag 1.3.0-beta.1 note over minorRelease #D3D3D3: 1.3.0-beta.1 minorRelease -> minorRelease: commit note over minorRelease #D3D3D3: 1.3.0-beta.2+2 minorRelease -> master: merge note over master #D3D3D3: 1.3.0+0 master -> master: tag 1.3.0 note over master #D3D3D3: 1.3.0 minorRelease -> develop: merge note over minorRelease Release branches are deleted once merged end note note over develop #D3D3D3: 1.4.0-unstable.2 == Major Release == hnote over majorRelease release/2.0.0 end note develop -> majorRelease: branch from develop note over majorRelease #D3D3D3: 2.0.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.4.0-unstable.3 majorRelease -> majorRelease: commit note over majorRelease #D3D3D3: 2.0.0-beta.1+1 majorRelease -> majorRelease: tag 2.0.0-beta.1 note over majorRelease #D3D3D3: 2.0.0-beta.1 majorRelease -> majorRelease: commit note over majorRelease #D3D3D3: 2.0.0-beta.2+2 majorRelease -> master: merge note over master #D3D3D3: 2.0.0+0 master -> master: tag 2.0.0 note over master #D3D3D3: 2.0.0 majorRelease -> develop: merge note over majorRelease Release branches are deleted once merged end note note over develop #D3D3D3: 2.1.0-unstable.2 == Support Branches == note over feature, hotfix Support branches allow you to create stable releases of a previous major or minor release. A support branch is essentially master for an old release end note create participant \"support/1.3.0\" as support master -> support: branch from tag (1.3.0) activate support support -> support: commit note over support #D3D3D3: 1.3.0+1 create participant \"hotfix/1.3.1\" as hotfix2 support -> hotfix2: branch from support/1.3.0 activate hotfix2 hotfix2 -> hotfix2: commit hotfix2 -> hotfix2: commit note over hotfix2 #D3D3D3: 1.3.1-beta.1+3 hotfix2 -> hotfix2: tag 1.3.1-beta.1 note over hotfix2 #D3D3D3: 1.3.1-beta.1 hotfix2 -> support: merge destroy hotfix2 note over hotfix2 Hotfix branches are deleted once merged end note note over support #D3D3D3: 1.3.1+4 support -> support: tag 1.3.1 note over support #D3D3D3: 1.3.1 == Minor release via support == note over feature, hotfix2 Much like hotfixing an old version you can release minor versions of old releases using support branches end note create participant \"release/1.4.0\" as supportRelease support -> supportRelease: branch from support/1.3.0 activate supportRelease supportRelease -> supportRelease: commit supportRelease -> supportRelease: commit note over supportRelease #D3D3D3: 1.4.0-beta.1+2 supportRelease -> supportRelease: tag 1.4.0-beta.1 note over supportRelease #D3D3D3: 1.4.0-beta.1 supportRelease -> support: merge destroy supportRelease note over supportRelease Release branches are deleted once merged end note note over support #D3D3D3: 1.4.0+0 support -> support: tag 1.4.0 note over support #D3D3D3: 1.4.0 @enduml 1.1 Configurer https Il convient de d\u00e9sactiver le param\u00e8tre de connexion sslverify. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > Team > Git > Configuration . Puis sous l\u2019onglet User Settings , ajouter une entr\u00e9e http avec sslverify affect\u00e9 \u00e0 false. Utiliser le bouton Add Entry... Attention le nom de la cl\u00e9 \u00e0 fournir est http.sslverify Le r\u00e9sultat obtenu est le suivant : Figure 2- Configuration https 1.2 Configurer l\u2019utilisateur Il convient de renseigner le nom et l\u2019adresse mail de l\u2019utilisateur. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > Team > Git > Configuration . Puis sous l\u2019onglet User Settings , ajouter une entr\u00e9e user avec email affect\u00e9 \u00e0 votre adresse mail et avec name affect\u00e9 avec votre matricule, pr\u00e9nom et nom. Utiliser le bouton Add Entry... Attention les noms des cl\u00e9s \u00e0 fournir sont user.email et user.name Le r\u00e9sultat obtenu est le suivant : Figure 3- Configuration Utilisateur Dans le cadre de la formation, le name sera renseign\u00e9 en fonction du poste de formation : Align\u00e9 \u00e0 gauche Centr\u00e9 Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche ce texte Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche est Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche centr\u00e9 Align\u00e9 \u00e0 droite Syntax Description Header Title Paragraph Text Poste1 -> git01 pr\u00e9nom nom Poste2 -> git 02 pr\u00e9nom nom Poste3 -> git03 pr\u00e9nom nom Poste4 -> git04 pr\u00e9nom nom Poste5 -> git05 pr\u00e9nom nom Poste6 -> git06 pr\u00e9nom nom | Poste7 -> git07 pr\u00e9nom nom | Poste8 -> git08 pr\u00e9nom nom | Poste9 -> git09 pr\u00e9nom nom | | Poste10 -> git10 pr\u00e9nom nom | 1.3 Configurer la connexion r\u00e9seau Il convient de modifier les param\u00e8tres de connectivit\u00e9 r\u00e9seau. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > General > Network Connections . S\u00e9lectionner comme Active Provider l\u2019option Native . S\u2019assurer que le \u00ab Schema \u00bb HTTPS utilise bien le proxy et que le suffixe \u00ab .socgen \u00bb ne passe pas par le proxy. Le r\u00e9sultat obtenu est le suivant : Figure 4- Configuration connexion r\u00e9seau","title":"Home"},{"location":"#bienvenue-a-formation-git","text":"","title":"Bienvenue  \u00e0 Formation Git"},{"location":"#introduction","text":"Ce document a pour but de pr\u00e9senter les exercices r\u00e9alis\u00e9s lors de la formation Git pour d\u00e9veloppeur. Dans ce document, Git est toujours utilis\u00e9 depuis Eclipse. Il ne s\u2019agit donc pas ici d\u2019utiliser Git en lignes de commande ou avec d\u2019autres clients. Il est donc indispensable que l\u2019utilisateur de ce guide connaisse Eclipse et sache un minimum d\u00e9velopper avec cet outil. Ce document peut \u00eatre utilis\u00e9 lors de la formation mais \u00e9galement de fa\u00e7on individuelle par toute personne souhaitant avoir une premi\u00e8re approche Git. Il est suffisamment illustr\u00e9 pour pouvoir appr\u00e9hender seul les principaux concepts et surtout pratiquer. Pour la formation, se connecter sur le poste avec son propre matricule (a ou x) et non celui de la salle de formation.","title":"Introduction"},{"location":"#1-exercice-1-configurer-git-sous-eclipse","text":"But de l\u2019exercice : Configurer Git sous Eclipse D\u00e9marrer Eclipse Kepler JEE 4.3.2, Se positionner dans le workspace D:\\FormationGit qui a d\u00e9j\u00e0 \u00e9t\u00e9 cr\u00e9\u00e9 sur les postes de formation. identification division. move a to b move 'ABCD' to zone. require 'redcarpet' markdown = Redcarpet.new(\"Hello World!\") puts markdown.to_html Figure 1- Choix du workspace @startuml [*] --> State1 State1 --> [*] State1 : this is a string State1 : this is another string State1 -> State2 State2 --> [*] @enduml @startuml scale 350 width [*] --> NotShooting state NotShooting { [*] --> Idle Idle --> Configuring : EvConfig Configuring --> Idle : EvConfig } state Configuring { [*] --> NewValueSelection NewValueSelection --> NewValuePreview : EvNewValue NewValuePreview --> NewValueSelection : EvNewValueRejected NewValuePreview --> NewValueSelection : EvNewValueSaved state NewValuePreview { State1 -> State2 } } @enduml @startuml skinparam ParticipantPadding 20 skinparam BoxPadding 10 box \"GitHub repo\" #LightCyan participant \"origin/master\" participant \"origin/develop\" end box box \"Dev1 repo\" #White participant develop participant \"feature/A\" participant \"feature/B\" end box activate \"origin/master\" \"origin/master\" -> \"origin/master\" : initial\\ncommit \"origin/master\" -> \"origin/develop\" : branch from\\norigin/master activate \"origin/develop\" \"develop\" <- \"origin/develop\" : pull from\\norigin/develop activate develop \"develop\" -> \"feature/A\" : branch from develop activate \"feature/A\" \"feature/A\" -> \"feature/A\" : commit 1 \"feature/A\" -> \"feature/A\" : commit 2 develop <- \"feature/A\" : merge feature/A\\ninto develop develop -> develop : merge commit destroy \"feature/A\" note over \"feature/A\": Feature branches are\\ndeleted when merged \"origin/develop\" <- \"develop\" : push to\\norigin/develop @enduml","title":"1 - Exercice 1 \u2013 Configurer Git sous Eclipse"},{"location":"#gitflow-hotfixpuml","text":"@startuml participant develop participant master master -> master: tag 1.2.0 create participant \"hotfix/1.2.1\" as hotfix master -> hotfix: branch from master activate hotfix hotfix -> hotfix: commit hotfix -> hotfix: commit note over hotfix #D3D3D3: 1.2.1-beta.1+2 hotfix -> hotfix: tag 1.2.1-beta.1 note over hotfix #D3D3D3: 1.2.1-beta.1 hotfix -> master: merge destroy hotfix note over hotfix Hotfix branches are deleted once merged end note master -> master: tag 1.2.1 @enduml","title":"gitflow-hotfix.puml"},{"location":"#gitflow-support-hotfixpuml","text":"@startuml == gitflow hotfix support == participant develop participant master master -> master: tag 1.3.0 master -> develop: branch from master note over develop, master Create 2.0.0 release and complete end note master -> master: tag 2.0.0 create participant \"support/1.x\" as support master -> support: branch from tag (1.3.0) support -> support: commit note over support #D3D3D3: 1.3.1+1 create participant \"hotfix/1.3.1\" as hotfix2 support -> hotfix2: branch from support/1.x activate hotfix2 hotfix2 -> hotfix2: commit hotfix2 -> hotfix2: commit note over hotfix2 #D3D3D3: 1.3.1-beta.1+3 hotfix2 -> hotfix2: tag 1.3.1-beta.1 note over hotfix2 #D3D3D3: 1.3.1-beta.1 hotfix2 -> support: merge destroy hotfix2 note over hotfix2 Hotfix branches are deleted once merged end note note over support #D3D3D3: 1.3.1+4 support -> support: tag 1.3.1 note over support #D3D3D3: 1.3.1 @enduml","title":"gitflow-support-hotfix.puml"},{"location":"#gitflow-majorpuml","text":"@startuml == gitflow major == participant master participant develop master -> master: tag 1.3.0 master -> develop: branch from master develop -> develop: commit create participant \"release/2.0.0\" as release develop -> release: branch from develop activate release note over release #D3D3D3: 2.0.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.4.0-unstable.2 release -> release: commit note over release #D3D3D3: 2.0.0-beta.1+1 release -> release: tag 2.0.0-beta.1 note over release #D3D3D3: 2.0.0-beta.1 release -> release: commit note over release #D3D3D3: 2.0.0-beta.2+2 release -> master: merge release -> develop: merge destroy release note over release Release branches are deleted once merged end note note over master #D3D3D3: 2.0.0+0 master -> master: tag 2.0.0 note over master #D3D3D3: 2.0.0 note over develop #D3D3D3: 2.1.0-unstable.2 @enduml","title":"gitflow-major.puml"},{"location":"#gitflow-minorpuml","text":"@startuml == gitflow minor == participant master participant develop master -> master: tag 1.2.1 master -> develop: branch from master develop -> develop: commit create participant \"release/1.3.0\" as release develop -> release: branch from develop activate release note over release #D3D3D3: 1.3.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.2 release -> release: commit note over release #D3D3D3: 1.3.0-beta.1+1 release -> release: tag 1.3.0-beta.1 note over release #D3D3D3: 1.3.0-beta.1 release -> release: commit note over release #D3D3D3: 1.3.0-beta.2+2 release -> master: merge release -> develop: merge destroy release note over release Release branches are deleted once merged end note master -> master: tag 1.3.0 note over master #D3D3D3: 1.3.0 note over develop #D3D3D3: 1.4.0-unstable.2 @enduml","title":"gitflow-minor.puml"},{"location":"#gitflow-featurebranchpuml","text":"@startuml == gitflow feature branch == participant master participant develop master -> master: tag 1.2.0 master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 create participant \"feature/myfeature\" as feature develop -> feature: branch from develop activate feature note over feature #D3D3D3: 1.3.0-myfeature.1+1 feature -> feature: commit note over feature #D3D3D3: 1.3.0-myfeature.1+2 feature -> develop: merge destroy feature note over feature Feature branches should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 @enduml","title":"gitflow-featurebranch.puml"},{"location":"#gitflow-support-minorpuml","text":"@startuml == gitflow support minor == participant develop participant master master -> master: tag 1.3.0 master -> develop: branch from master note over develop, master Create 2.0.0 release and complete end note master -> master: tag 2.0.0 create participant \"support/1.x\" as support master -> support: branch from tag (1.3.0) note over master, support Create 1.3.1 release and complete end note support -> support: tag 1.3.1 create participant \"release/1.4.0\" as supportRelease support -> supportRelease: branch from support/1.x activate supportRelease supportRelease -> supportRelease: commit supportRelease -> supportRelease: commit note over supportRelease #D3D3D3: 1.4.0-beta.1+2 supportRelease -> supportRelease: tag 1.4.0-beta.1 note over supportRelease #D3D3D3: 1.4.0-beta.1 supportRelease -> support: merge destroy supportRelease note over supportRelease Release branches are deleted once merged end note note over support #D3D3D3: 1.4.0+0 support -> support: tag 1.4.0 note over support #D3D3D3: 1.4.0 @enduml","title":"gitflow-support-minor.puml"},{"location":"#gitflow-pullrequestpuml","text":"@startuml participant master participant develop master -> master: tag 1.2.0 master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 create participant \"pull/2/merge\" as pr develop -> pr: branch from develop activate pr note over pr #D3D3D3: 1.3.0-PullRequest.2+1 pr -> pr: commit note over pr #D3D3D3: 1.3.0-PullRequest.2+2 pr -> develop: merge destroy pr note over pr Feature branches/pr's should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 @enduml","title":"gitflow-pullrequest.puml"},{"location":"#gitflow-overviewpuml","text":"@startuml == gitflow overwiew == participant \"pull/2/merge\" as feature participant develop participant \"release/2.0.0\" as majorRelease participant \"release/1.3.0\" as minorRelease participant master activate develop activate master master -> master: commit master -> master: tag 1.2.0 == Feature branch == note over feature, master Feature branches are likely pushed to a fork, then submit a PR.pull/2/merge is what your build server sees when you submit a PR with #2 end note hnote over develop develop end note master -> develop: branch from master develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.1 hnote over feature pull/2/merge end note develop -> feature: branch from develop activate feature note over feature #D3D3D3: 1.3.0-PullRequest.2+1 feature -> feature: commit note over feature #D3D3D3: 1.3.0-PullRequest.2+2 feature -> develop: merge destroy feature note over feature Feature branches/pr's should be deleted once merged end note note over develop #D3D3D3: 1.3.0-unstable.3 == Hotfix release == note over feature, master Hotfix branches are short lived branches which allow you to do SemVer patch releases end note create participant \"hotfix/1.2.1\" as hotfix master -> hotfix: branch from master activate hotfix hotfix -> hotfix: commit hotfix -> hotfix: commit note over hotfix #D3D3D3: 1.2.1-beta.1+2 hotfix -> hotfix: tag 1.2.1-beta.1 note over hotfix #D3D3D3: 1.2.1-beta.1 hotfix -> master: merge destroy hotfix note over hotfix Hotfix branches are deleted once merged end note master -> master: tag 1.2.1 == Minor Release == note over feature, master In GitFlow the release branch is taken from develop end note hnote over minorRelease release/1.3.0 end note develop -> minorRelease: branch from develop activate minorRelease note over minorRelease #D3D3D3: 1.3.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.3.0-unstable.4 minorRelease -> minorRelease: commit note over minorRelease #D3D3D3: 1.3.0-beta.1+1 minorRelease -> minorRelease: tag 1.3.0-beta.1 note over minorRelease #D3D3D3: 1.3.0-beta.1 minorRelease -> minorRelease: commit note over minorRelease #D3D3D3: 1.3.0-beta.2+2 minorRelease -> master: merge note over master #D3D3D3: 1.3.0+0 master -> master: tag 1.3.0 note over master #D3D3D3: 1.3.0 minorRelease -> develop: merge note over minorRelease Release branches are deleted once merged end note note over develop #D3D3D3: 1.4.0-unstable.2 == Major Release == hnote over majorRelease release/2.0.0 end note develop -> majorRelease: branch from develop note over majorRelease #D3D3D3: 2.0.0-beta.1+0 develop -> develop: commit note over develop #D3D3D3: 1.4.0-unstable.3 majorRelease -> majorRelease: commit note over majorRelease #D3D3D3: 2.0.0-beta.1+1 majorRelease -> majorRelease: tag 2.0.0-beta.1 note over majorRelease #D3D3D3: 2.0.0-beta.1 majorRelease -> majorRelease: commit note over majorRelease #D3D3D3: 2.0.0-beta.2+2 majorRelease -> master: merge note over master #D3D3D3: 2.0.0+0 master -> master: tag 2.0.0 note over master #D3D3D3: 2.0.0 majorRelease -> develop: merge note over majorRelease Release branches are deleted once merged end note note over develop #D3D3D3: 2.1.0-unstable.2 == Support Branches == note over feature, hotfix Support branches allow you to create stable releases of a previous major or minor release. A support branch is essentially master for an old release end note create participant \"support/1.3.0\" as support master -> support: branch from tag (1.3.0) activate support support -> support: commit note over support #D3D3D3: 1.3.0+1 create participant \"hotfix/1.3.1\" as hotfix2 support -> hotfix2: branch from support/1.3.0 activate hotfix2 hotfix2 -> hotfix2: commit hotfix2 -> hotfix2: commit note over hotfix2 #D3D3D3: 1.3.1-beta.1+3 hotfix2 -> hotfix2: tag 1.3.1-beta.1 note over hotfix2 #D3D3D3: 1.3.1-beta.1 hotfix2 -> support: merge destroy hotfix2 note over hotfix2 Hotfix branches are deleted once merged end note note over support #D3D3D3: 1.3.1+4 support -> support: tag 1.3.1 note over support #D3D3D3: 1.3.1 == Minor release via support == note over feature, hotfix2 Much like hotfixing an old version you can release minor versions of old releases using support branches end note create participant \"release/1.4.0\" as supportRelease support -> supportRelease: branch from support/1.3.0 activate supportRelease supportRelease -> supportRelease: commit supportRelease -> supportRelease: commit note over supportRelease #D3D3D3: 1.4.0-beta.1+2 supportRelease -> supportRelease: tag 1.4.0-beta.1 note over supportRelease #D3D3D3: 1.4.0-beta.1 supportRelease -> support: merge destroy supportRelease note over supportRelease Release branches are deleted once merged end note note over support #D3D3D3: 1.4.0+0 support -> support: tag 1.4.0 note over support #D3D3D3: 1.4.0 @enduml","title":"gitflow-overview.puml"},{"location":"#11-configurer-https","text":"Il convient de d\u00e9sactiver le param\u00e8tre de connexion sslverify. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > Team > Git > Configuration . Puis sous l\u2019onglet User Settings , ajouter une entr\u00e9e http avec sslverify affect\u00e9 \u00e0 false. Utiliser le bouton Add Entry... Attention le nom de la cl\u00e9 \u00e0 fournir est http.sslverify Le r\u00e9sultat obtenu est le suivant : Figure 2- Configuration https","title":"1.1 Configurer https"},{"location":"#12-configurer-lutilisateur","text":"Il convient de renseigner le nom et l\u2019adresse mail de l\u2019utilisateur. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > Team > Git > Configuration . Puis sous l\u2019onglet User Settings , ajouter une entr\u00e9e user avec email affect\u00e9 \u00e0 votre adresse mail et avec name affect\u00e9 avec votre matricule, pr\u00e9nom et nom. Utiliser le bouton Add Entry... Attention les noms des cl\u00e9s \u00e0 fournir sont user.email et user.name Le r\u00e9sultat obtenu est le suivant : Figure 3- Configuration Utilisateur Dans le cadre de la formation, le name sera renseign\u00e9 en fonction du poste de formation : Align\u00e9 \u00e0 gauche Centr\u00e9 Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche ce texte Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche est Align\u00e9 \u00e0 droite Align\u00e9 \u00e0 gauche centr\u00e9 Align\u00e9 \u00e0 droite Syntax Description Header Title Paragraph Text Poste1 -> git01 pr\u00e9nom nom Poste2 -> git 02 pr\u00e9nom nom Poste3 -> git03 pr\u00e9nom nom Poste4 -> git04 pr\u00e9nom nom Poste5 -> git05 pr\u00e9nom nom Poste6 -> git06 pr\u00e9nom nom | Poste7 -> git07 pr\u00e9nom nom | Poste8 -> git08 pr\u00e9nom nom | Poste9 -> git09 pr\u00e9nom nom | | Poste10 -> git10 pr\u00e9nom nom |","title":"1.2 Configurer l\u2019utilisateur"},{"location":"#13-configurer-la-connexion-reseau","text":"Il convient de modifier les param\u00e8tres de connectivit\u00e9 r\u00e9seau. Ouvrir les pr\u00e9f\u00e9rences Window > Preferences > General > Network Connections . S\u00e9lectionner comme Active Provider l\u2019option Native . S\u2019assurer que le \u00ab Schema \u00bb HTTPS utilise bien le proxy et que le suffixe \u00ab .socgen \u00bb ne passe pas par le proxy. Le r\u00e9sultat obtenu est le suivant : Figure 4- Configuration connexion r\u00e9seau","title":"1.3 Configurer la connexion r\u00e9seau"},{"location":"about/","text":"Agrosque scire te erat Ultimus petatur sextae sumpserat arbore Lorem markdownum oras ! Longo ad pectora verba tyrannidis haesit attraxerat foedantem ira hausi tela. Aegre Proserpina pars vultum aequare officioque nullo Cumque male Maior unam regia Hebre lacrimis Erat bene caedis ipse clamor morte hoc Nefando quantum. Caeleste sua qua iecit secura, soporem suspenderat magni reppulit aerane dextra? Ulvaeque pectora, dumque utque Poeantiaden iam cum sic mollescat vultus culpa, iam et? Phoebo inferias quod Nec hinc Inoo, magni abstrahit caesa imitamina teneras quis magis . Templi tamen fundamina nobis nunc faciem, Dixit pondus indignum factaque. Trachasque presso et te duorum pendat enim unius ferar virtutem et corpore falleret Mimasque ulnis. Ipse depresso sub domum nata duabus , dis unum nec; tardior onus patitur et ! Sole ubi quis altior scire carchesia arto. Sontem velox Excitat nostro Mentes sustinet et prima grave postquam busta Fateor harundine torva Achivi vivum proferri Vagina tangamque et vellere Indigetem quaerens ibi Deciderant una lecto de qui longa agitavit prima faciendus fortius aestuat sui statque nunc domo, potentior. Ferat cretus linguam. Nos nocet est ablatus saltus, more dicere nova; cupit ille fuit per : stabat. var xp = input_emulation; net_joystick = proxy(bin_ppp_apache, hardening); var recursive = iso_troubleshooting_topology; if (pinterest != barebones_refresh_docking + digital_batch(half, drivePointFirewall)) { boot_time.mipsFloppyOffline = 3; io.title(wireless_open_user, nat, ispPathClient); } usb(systrayMode.speed(throughput, marginTween), gifDashboardMatrix, user - ip(drive, 1)); Dives formam pectora coniugis amori parvae. Mota terra dici Phinea ab Maera vulnera parva angusta pectore! Notitiam contigerant putes attonitas pharetras vellera in violari illius. Res iaculum cernis! Illa nec et, in iurasse At adsilientis faces vexant, intonsum et relatis auctore niger aderam saltumque sine manumque. Frigora omnes mutatus, ibat terra pariter terras. Per sit ubi vestra, est praedator urbem, venenum undas exiguo ora dea nec. Regna conclamat primaque ; veni dare novissima fregit pavet peraguntque ab ima in nunc fortibus crudele.","title":"About"},{"location":"about/#agrosque-scire-te-erat","text":"","title":"Agrosque scire te erat"},{"location":"about/#ultimus-petatur-sextae-sumpserat-arbore","text":"Lorem markdownum oras ! Longo ad pectora verba tyrannidis haesit attraxerat foedantem ira hausi tela. Aegre Proserpina pars vultum aequare officioque nullo Cumque male Maior unam regia Hebre lacrimis Erat bene caedis ipse clamor morte hoc Nefando quantum. Caeleste sua qua iecit secura, soporem suspenderat magni reppulit aerane dextra? Ulvaeque pectora, dumque utque Poeantiaden iam cum sic mollescat vultus culpa, iam et?","title":"Ultimus petatur sextae sumpserat arbore"},{"location":"about/#phoebo-inferias-quod","text":"Nec hinc Inoo, magni abstrahit caesa imitamina teneras quis magis . Templi tamen fundamina nobis nunc faciem, Dixit pondus indignum factaque. Trachasque presso et te duorum pendat enim unius ferar virtutem et corpore falleret Mimasque ulnis. Ipse depresso sub domum nata duabus , dis unum nec; tardior onus patitur et ! Sole ubi quis altior scire carchesia arto. Sontem velox Excitat nostro Mentes sustinet et prima grave postquam busta Fateor harundine torva Achivi vivum proferri","title":"Phoebo inferias quod"},{"location":"about/#vagina-tangamque-et-vellere-indigetem-quaerens-ibi","text":"Deciderant una lecto de qui longa agitavit prima faciendus fortius aestuat sui statque nunc domo, potentior. Ferat cretus linguam. Nos nocet est ablatus saltus, more dicere nova; cupit ille fuit per : stabat. var xp = input_emulation; net_joystick = proxy(bin_ppp_apache, hardening); var recursive = iso_troubleshooting_topology; if (pinterest != barebones_refresh_docking + digital_batch(half, drivePointFirewall)) { boot_time.mipsFloppyOffline = 3; io.title(wireless_open_user, nat, ispPathClient); } usb(systrayMode.speed(throughput, marginTween), gifDashboardMatrix, user - ip(drive, 1)); Dives formam pectora coniugis amori parvae. Mota terra dici Phinea ab Maera vulnera parva angusta pectore! Notitiam contigerant putes attonitas pharetras vellera in violari illius. Res iaculum cernis! Illa nec et, in iurasse At adsilientis faces vexant, intonsum et relatis auctore niger aderam saltumque sine manumque. Frigora omnes mutatus, ibat terra pariter terras. Per sit ubi vestra, est praedator urbem, venenum undas exiguo ora dea nec. Regna conclamat primaque ; veni dare novissima fregit pavet peraguntque ab ima in nunc fortibus crudele.","title":"Vagina tangamque et vellere Indigetem quaerens ibi"}]}